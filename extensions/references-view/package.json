{
	"name": "references-view",
	"displayName": "%displayName%",
	"description": "%description%",
	"main": "./out/extension",
	"browser": "./dist/extension.js",
	"scripts": {
		"compile": "npx gulp compile-extension:references-view"
	},
	"contributes": {
		"commands": [
			{
				"category": "%cmd.category.references%",
				"command": "references-view.findReferences",
				"title": "%cmd.references-view.findReferences%"
			},
			{
				"category": "%cmd.category.references%",
				"command": "references-view.findImplementations",
				"title": "%cmd.references-view.findImplementations%"
			},
			{
				"category": "%cmd.category.references%",
				"command": "references-view.clearHistory",
				"icon": "$(clear-all)",
				"title": "%cmd.references-view.clearHistory%"
			},
			{
				"category": "%cmd.category.references%",
				"command": "references-view.clear",
				"icon": "$(clear-all)",
				"title": "%cmd.references-view.clear%"
			},
			{
				"category": "%cmd.category.references%",
				"command": "references-view.refresh",
				"icon": "$(refresh)",
				"title": "%cmd.references-view.refresh%"
			},
			{
				"category": "%cmd.category.references%",
				"command": "references-view.pickFromHistory",
				"title": "%cmd.references-view.pickFromHistory%"
			},
			{
				"command": "references-view.removeReferenceItem",
				"icon": "$(close)",
				"title": "%cmd.references-view.removeReferenceItem%"
			},
			{
				"command": "references-view.copy",
				"title": "%cmd.references-view.copy%"
			},
			{
				"command": "references-view.copyAll",
				"title": "%cmd.references-view.copyAll%"
			},
			{
				"command": "references-view.copyPath",
				"title": "%cmd.references-view.copyPath%"
			},
			{
				"command": "references-view.refind",
				"icon": "$(refresh)",
				"title": "%cmd.references-view.refind%"
			},
			{
				"category": "Calls",
				"command": "references-view.showCallHierarchy",
				"title": "%cmd.references-view.showCallHierarchy%"
			},
			{
				"category": "Calls",
				"command": "references-view.showOutgoingCalls",
				"icon": "$(call-outgoing)",
				"title": "%cmd.references-view.showOutgoingCalls%"
			},
			{
				"category": "Calls",
				"command": "references-view.showIncomingCalls",
				"icon": "$(call-incoming)",
				"title": "%cmd.references-view.showIncomingCalls%"
			},
			{
				"command": "references-view.removeCallItem",
				"icon": "$(close)",
				"title": "%cmd.references-view.removeCallItem%"
			},
			{
				"command": "references-view.next",
				"enablement": "references-view.canNavigate",
				"title": "%cmd.references-view.next%"
			},
			{
				"command": "references-view.prev",
				"enablement": "references-view.canNavigate",
				"title": "%cmd.references-view.prev%"
			},
			{
				"category": "Types",
				"command": "references-view.showTypeHierarchy",
				"title": "%cmd.references-view.showTypeHierarchy%"
			},
			{
				"category": "Types",
				"command": "references-view.showSupertypes",
				"icon": "$(type-hierarchy-super)",
				"title": "%cmd.references-view.showSupertypes%"
			},
			{
				"category": "Types",
				"command": "references-view.showSubtypes",
				"icon": "$(type-hierarchy-sub)",
				"title": "%cmd.references-view.showSubtypes%"
			},
			{
				"command": "references-view.removeTypeItem",
				"icon": "$(close)",
				"title": "%cmd.references-view.removeTypeItem%"
			}
		],
		"configuration": {
			"properties": {
				"references.preferredLocation": {
					"default": "peek",
					"description": "%config.references.preferredLocation%",
					"enum": [
						"peek",
						"view"
					],
					"enumDescriptions": [
						"%config.references.preferredLocation.peek%",
						"%config.references.preferredLocation.view%"
					],
					"type": "string"
				}
			}
		},
		"keybindings": [
			{
				"command": "references-view.findReferences",
				"key": "shift+alt+f12",
				"when": "editorHasReferenceProvider"
			},
			{
				"command": "references-view.next",
				"key": "f4",
				"when": "reference-list.hasResult"
			},
			{
				"command": "references-view.prev",
				"key": "shift+f4",
				"when": "reference-list.hasResult"
			},
			{
				"command": "references-view.showCallHierarchy",
				"key": "shift+alt+h",
				"when": "editorHasCallHierarchyProvider"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "references-view.removeReferenceItem",
					"when": "never"
				},
				{
					"command": "references-view.removeCallItem",
					"when": "never"
				},
				{
					"command": "references-view.removeTypeItem",
					"when": "never"
				},
				{
					"command": "references-view.copy",
					"when": "never"
				},
				{
					"command": "references-view.copyAll",
					"when": "never"
				},
				{
					"command": "references-view.copyPath",
					"when": "never"
				},
				{
					"command": "references-view.refind",
					"when": "never"
				},
				{
					"command": "references-view.findReferences",
					"when": "editorHasReferenceProvider"
				},
				{
					"command": "references-view.clear",
					"when": "reference-list.hasResult"
				},
				{
					"command": "references-view.clearHistory",
					"when": "reference-list.isActive && !reference-list.hasResult"
				},
				{
					"command": "references-view.refresh",
					"when": "reference-list.hasResult"
				},
				{
					"command": "references-view.pickFromHistory",
					"when": "reference-list.isActive"
				},
				{
					"command": "references-view.next",
					"when": "never"
				},
				{
					"command": "references-view.prev",
					"when": "never"
				}
			],
			"editor/context": [
				{
					"command": "references-view.findReferences",
					"group": "0_navigation@1",
					"when": "editorHasReferenceProvider"
				},
				{
					"command": "references-view.findImplementations",
					"group": "0_navigation@2",
					"when": "editorHasImplementationProvider"
				},
				{
					"command": "references-view.showCallHierarchy",
					"group": "0_navigation@3",
					"when": "editorHasCallHierarchyProvider"
				},
				{
					"command": "references-view.showTypeHierarchy",
					"group": "0_navigation@4",
					"when": "editorHasTypeHierarchyProvider"
				}
			],
			"view/item/context": [
				{
					"command": "references-view.removeReferenceItem",
					"group": "inline",
					"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"
				},
				{
					"command": "references-view.removeCallItem",
					"group": "inline",
					"when": "view == references-view.tree && viewItem == call-item"
				},
				{
					"command": "references-view.removeTypeItem",
					"group": "inline",
					"when": "view == references-view.tree && viewItem == type-item"
				},
				{
					"command": "references-view.refind",
					"group": "inline",
					"when": "view == references-view.tree && viewItem == history-item"
				},
				{
					"command": "references-view.removeReferenceItem",
					"group": "1",
					"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"
				},
				{
					"command": "references-view.removeCallItem",
					"group": "1",
					"when": "view == references-view.tree && viewItem == call-item"
				},
				{
					"command": "references-view.removeTypeItem",
					"group": "1",
					"when": "view == references-view.tree && viewItem == type-item"
				},
				{
					"command": "references-view.refind",
					"group": "1",
					"when": "view == references-view.tree && viewItem == history-item"
				},
				{
					"command": "references-view.copy",
					"group": "2@1",
					"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"
				},
				{
					"command": "references-view.copyPath",
					"group": "2@2",
					"when": "view == references-view.tree && viewItem == file-item"
				},
				{
					"command": "references-view.copyAll",
					"group": "2@3",
					"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"
				},
				{
					"command": "references-view.showOutgoingCalls",
					"group": "1",
					"when": "view == references-view.tree && viewItem == call-item"
				},
				{
					"command": "references-view.showIncomingCalls",
					"group": "1",
					"when": "view == references-view.tree && viewItem == call-item"
				},
				{
					"command": "references-view.showSupertypes",
					"group": "1",
					"when": "view == references-view.tree && viewItem == type-item"
				},
				{
					"command": "references-view.showSubtypes",
					"group": "1",
					"when": "view == references-view.tree && viewItem == type-item"
				}
			],
			"view/title": [
				{
					"command": "references-view.clear",
					"group": "navigation@3",
					"when": "view == references-view.tree && reference-list.hasResult"
				},
				{
					"command": "references-view.clearHistory",
					"group": "navigation@3",
					"when": "view == references-view.tree && reference-list.hasHistory && !reference-list.hasResult"
				},
				{
					"command": "references-view.refresh",
					"group": "navigation@2",
					"when": "view == references-view.tree && reference-list.hasResult"
				},
				{
					"command": "references-view.showOutgoingCalls",
					"group": "navigation@1",
					"when": "view == references-view.tree && reference-list.hasResult && reference-list.source == callHierarchy &&  references-view.callHierarchyMode == showIncoming"
				},
				{
					"command": "references-view.showIncomingCalls",
					"group": "navigation@1",
					"when": "view == references-view.tree && reference-list.hasResult && reference-list.source == callHierarchy &&  references-view.callHierarchyMode == showOutgoing"
				},
				{
					"command": "references-view.showSupertypes",
					"group": "navigation@1",
					"when": "view == references-view.tree && reference-list.hasResult && reference-list.source == typeHierarchy &&  references-view.typeHierarchyMode != supertypes"
				},
				{
					"command": "references-view.showSubtypes",
					"group": "navigation@1",
					"when": "view == references-view.tree && reference-list.hasResult && reference-list.source == typeHierarchy &&  references-view.typeHierarchyMode != subtypes"
				}
			]
		},
		"views": {
			"references-view": [
				{
					"id": "references-view.tree",
					"name": "%view.title%",
					"when": "reference-list.isActive"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "$(references)",
					"id": "references-view",
					"title": "%container.title%"
				}
			]
		}
	},
	"activationEvents": [
		"onCommand:references-view.find",
		"onCommand:editor.action.showReferences"
	],
	"dependencies": {},
	"devDependencies": {
		"@types/node": "20.x"
	},
	"icon": "media/icon.png",
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": true
		},
		"virtualWorkspaces": true
	}
}

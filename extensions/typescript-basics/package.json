{
	"contributes": {
		"grammars": [
			{
				"language": "typescript",
				"path": "./syntaxes/TypeScript.tmLanguage.json",
				"scopeName": "source.ts",
				"tokenTypes": {
					"entity.name.function.tagged-template": "other",
					"entity.name.type.instance.jsdoc": "other",
					"meta.import string.quoted": "other",
					"meta.template.expression": "other",
					"meta.template.expression comment": "comment",
					"meta.template.expression string": "string",
					"variable.other.jsdoc": "other"
				},
				"unbalancedBracketScopes": [
					"keyword.operator.relational",
					"storage.type.function.arrow",
					"keyword.operator.bitwise.shift",
					"meta.brace.angle",
					"punctuation.definition.tag",
					"keyword.operator.assignment.compound.bitwise.ts"
				]
			},
			{
				"embeddedLanguages": {
					"meta.embedded.expression.tsx": "typescriptreact",
					"meta.tag.attributes.tsx": "typescriptreact",
					"meta.tag.tsx": "jsx-tags",
					"meta.tag.without-attributes.tsx": "jsx-tags"
				},
				"language": "typescriptreact",
				"path": "./syntaxes/TypeScriptReact.tmLanguage.json",
				"scopeName": "source.tsx",
				"tokenTypes": {
					"entity.name.function.tagged-template": "other",
					"entity.name.type.instance.jsdoc": "other",
					"meta.import string.quoted": "other",
					"meta.template.expression": "other",
					"meta.template.expression comment": "comment",
					"meta.template.expression string": "string",
					"variable.other.jsdoc": "other"
				},
				"unbalancedBracketScopes": [
					"keyword.operator.relational",
					"storage.type.function.arrow",
					"keyword.operator.bitwise.shift",
					"punctuation.definition.tag",
					"keyword.operator.assignment.compound.bitwise.ts"
				]
			},
			{
				"injectTo": [
					"source.ts",
					"source.tsx"
				],
				"path": "./syntaxes/jsdoc.ts.injection.tmLanguage.json",
				"scopeName": "documentation.injection.ts"
			},
			{
				"injectTo": [
					"source.js",
					"source.js.jsx"
				],
				"path": "./syntaxes/jsdoc.js.injection.tmLanguage.json",
				"scopeName": "documentation.injection.js.jsx"
			}
		],
		"languages": [
			{
				"aliases": [
					"TypeScript",
					"ts",
					"typescript"
				],
				"configuration": "./language-configuration.json",
				"extensions": [
					".ts",
					".cts",
					".mts"
				],
				"id": "typescript"
			},
			{
				"aliases": [
					"TypeScript JSX",
					"TypeScript React",
					"tsx"
				],
				"configuration": "./language-configuration.json",
				"extensions": [
					".tsx"
				],
				"id": "typescriptreact"
			},
			{
				"filenamePatterns": [
					"tsconfig.*.json",
					"jsconfig.*.json",
					"tsconfig-*.json",
					"jsconfig-*.json"
				],
				"filenames": [
					"tsconfig.json",
					"jsconfig.json"
				],
				"id": "jsonc"
			},
			{
				"extensions": [
					".tsbuildinfo"
				],
				"id": "json"
			}
		],
		"semanticTokenScopes": [
			{
				"language": "typescript",
				"scopes": {
					"function": [
						"entity.name.function.ts"
					],
					"function.defaultLibrary": [
						"support.function.ts"
					],
					"namespace": [
						"entity.name.type.module.ts"
					],
					"property": [
						"variable.other.property.ts"
					],
					"property.readonly": [
						"variable.other.constant.property.ts"
					],
					"variable": [
						"variable.other.readwrite.ts"
					],
					"variable.defaultLibrary": [
						"support.variable.ts"
					],
					"variable.readonly": [
						"variable.other.constant.object.ts"
					]
				}
			},
			{
				"language": "typescriptreact",
				"scopes": {
					"function": [
						"entity.name.function.tsx"
					],
					"function.defaultLibrary": [
						"support.function.tsx"
					],
					"namespace": [
						"entity.name.type.module.tsx"
					],
					"property": [
						"variable.other.property.tsx"
					],
					"property.readonly": [
						"variable.other.constant.property.tsx"
					],
					"variable": [
						"variable.other.readwrite.tsx"
					],
					"variable.defaultLibrary": [
						"support.variable.tsx"
					],
					"variable.readonly": [
						"variable.other.constant.object.tsx"
					]
				}
			}
		],
		"snippets": [
			{
				"language": "typescript",
				"path": "./snippets/typescript.code-snippets"
			},
			{
				"language": "typescriptreact",
				"path": "./snippets/typescript.code-snippets"
			}
		]
	},
	"description": "%description%",
	"displayName": "%displayName%",
	"name": "typescript",
	"scripts": {
		"update-grammar": "node ./build/update-grammars.mjs"
	}
}
